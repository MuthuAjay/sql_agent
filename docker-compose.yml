version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: sql_agent_postgres
    environment:
      POSTGRES_DB: sql_agent_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourpassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d sql_agent_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ChromaDB Vector Database
  chromadb:
    image: chromadb/chroma:latest
    container_name: sql_agent_chromadb
    ports:
      - "8000:8000"
    volumes:
      - chromadb_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 10s
      timeout: 5s
      retries: 5

  # SQL Agent Application
  sql_agent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sql_agent_app
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:yourpassword@postgres:5432/sql_agent_db
      - VECTOR_DB_URL=http://chromadb:8000
    depends_on:
      postgres:
        condition: service_healthy
      chromadb:
        condition: service_healthy
    volumes:
      - .:/app
    command: ["poetry", "run", "uvicorn", "sql_agent.api.main:app", "--host", "0.0.0.0", "--port", "8080", "--reload"]

volumes:
  postgres_data:
  chromadb_data: 